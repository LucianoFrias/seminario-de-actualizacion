Mecanismos de Sesión de Usuario

1 - Autentificación Continua: 

Ante cualquier acción del sistema, el usuario siempre va a pasar sus datos de login. 
Cada acción que se ejecuta utiliza la autentificación antes de realizarse.
(Pasar usuario/password todo el tiempo)

2 - Session Token: 
En lugar de que el HTTP conteste al acceso, se contesta con una llave, que se guarda en la sesión que se convierte en lo que se pasa entre el servidor y el usuario.

En ambos casos, se puede controlar la duración de las interacciones. 
En el primer caso, solo se requiere que los datos del usuario sean válidos. 
En cambio, a los token se les puede asignar una duración limitada. 
La fecha de vencimiento se puede reactualizar en función de cuanto tiempo permanece iniciada la sesión.


1 - Desarrollar una SQLQuery que permita validar la existencia e igualdad de un usuario y contraseña. [X]
2 - Construir el archivo "auth.php" que permita invocar el procedimiento del punto 1.

7 / 9 S.A - Mecanismos de Autentificación

. Autentificación Continua
. Claves de Sesión: 

1 - Cuando alguien hace clic en el 'login', en el lado del servidor se ejecuta la respuesta de forma distinta. 
2 - El servidor llama a la DB para pedirle que genere una llave, y que le ponga una fecha de vencimiento, y luego esa clave se devuelve como un token de sesión.
3 - La vista guarda el token.
4 - Cuando el cliente ejecuta cualquier otra acción, debe hacer la petición enviando el token.

Crear sesión para Usuario ( username, password / id_user)
{

id = authenticateUser ();
 if ( id != NULL)
 {
   generateUserToken (id, currentDate [fecha de creación], expirationDate [límite del período de validez]);
 }

}